{"version":3,"sources":["components/Forms.js","components/Navbar.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Forms","props","useState","text","settext","className","style","color","mode","heading","backgroundColor","value","onChange","event","target","id","rows","disabled","length","onClick","newtext","toUpperCase","showalert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","newText","split","join","filter","element","Navbar","href","title","type","toggle","role","htmlFor","Alert","height","alert","word","lower","charAt","slice","capitlize","msg","App","setmode","setalert","message","setTimeout","abouttext","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.be1d7822.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\n\r\nexport default function Forms(props) {\r\n  const [text, settext] = useState('');\r\n\r\n    const handleupclick = () =>{\r\n        // console.log(\"on click event is fired\")\r\n        let newtext = text.toUpperCase();\r\n        settext(newtext);\r\n        props.showalert(\"converted to uppercase\",\"success\")\r\n        // console.log(text);\r\n    }\r\n    \r\n    const handlelowclick = () =>{\r\n        // console.log(\"on click event is fired\")\r\n        let newtext = text.toLowerCase();\r\n        settext(newtext);\r\n        props.showalert(\"converted to lowercase\",\"success\")\r\n        // console.log(text);\r\n    }\r\n    const handleclrtxt = () =>{\r\n      let newtext = \"\";\r\n      settext(newtext);\r\n      props.showalert(\"Text cleared\",\"success\")\r\n    }\r\n\r\n    const handleonchange = (event) =>{\r\n        // console.log(\"on change\")\r\n        \r\n        settext(event.target.value);\r\n    }\r\n    const handlecopy = () =>{\r\n      var text = document.getElementById('myBox');\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n      props.showalert(\"copy to clipboard\",\"success\")\r\n    }\r\n\r\n    const handleExtraSpace = () =>{\r\n      let newText = text.split(/[ ]+/);\r\n      settext(newText.join(\" \"));\r\n      props.showalert(\"Extra space removed\",\"success\")\r\n    }\r\n\r\n   \r\n   \r\n    // text = \"new text\";  // wrong way to update state\r\n    // settext(\"newtext\");  // correct wat to update state\r\n  return (\r\n  <>\r\n    <div className=\"container\" style={{color: props.mode===\"light\"?\"black\":\"white\"}}>\r\n    <h2 >{props.heading}</h2>\r\n      <div className=\"mb-3\">\r\n        \r\n        <textarea\r\n          className=\"form-control\"\r\n          style={{backgroundColor: props.mode===\"light\"?\"white\":\"darkgrey\",color: props.mode===\"light\"?\"black\":\"white\"}}\r\n          value = {text}\r\n          onChange={handleonchange}\r\n          id=\"myBox\"\r\n          rows=\"9\"\r\n        ></textarea>\r\n      </div>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleupclick}>Change to uppercase</button>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handlelowclick}>Change to lowercase</button>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleclrtxt}>Clear text</button>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handlecopy}>Copy text</button>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleExtraSpace}>Remove extra spaces</button>\r\n\r\n    </div>\r\n\r\n    <div className=\"container my-3\" style={{color: props.mode===\"light\"?\"black\":\"white\"}}>\r\n        <h3 >Your text summary</h3>\r\n        <p >{text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n        <p >{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} minutes to read</p>\r\n        <h4 >preview</h4>\r\n        <p>{text.length>0?text:\"Enter something in textbox above to preview\"}</p>\r\n    </div>\r\n  </> \r\n  );\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  \r\n    return (\r\n        <div>\r\n                    <div>\r\n             \r\n             <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n             <div className=\"container-fluid\">\r\n               <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n               <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarScroll\" aria-controls=\"navbarScroll\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                 <span className=\"navbar-toggler-icon\"></span>\r\n               </button>\r\n               <div className=\"collapse navbar-collapse\" id=\"navbarScroll\">\r\n                 <ul className=\"navbar-nav me-auto my-2 my-lg-0 navbar-nav-scroll\" >\r\n                   <li className=\"nav-item\">\r\n                     <a className=\"nav-a active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                   </li>\r\n                   {/* <li className=\"nav-item\">\r\n                     <Link className=\"nav-a mx-3\"style={{color: props.mode===\"light\"?\"black\":\"white\"}} to=\"/about\" >{props.abouttext}</Link>\r\n                   </li>\r\n  */}\r\n                  \r\n                 </ul>\r\n                 {/* <form className=\"d-flex\">\r\n                   <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                   <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                 </form> */}\r\n               </div>\r\n             </div>                  <div className={`form-check form-switch text-${props.mode===\"light\"?\"dark\":\"light\"}`}>\r\n  <input onClick={props.toggle} className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" >Enabel dark mode</label>\r\n</div>\r\n           </nav>\r\n                   </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  abouttext: PropTypes.string.isRequired\r\n}\r\n\r\n// Navbar.defaultProps = {\r\n//     title: \"set title here\",\r\n//     abouttext: \" set about here\"\r\n//   }","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitlize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n       <div style={{height: '10vh'}}>{props.alert &&   <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n       <strong>{capitlize(props.alert.type)}</strong>: {props.alert.msg}\r\n</div>}\r\n      </div>\r\n         \r\n    )\r\n}\r\n","import Forms from \"./components/Forms\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport React, { useState } from 'react'\nimport Alert from \"./components/Alert\";\n// import { Route } from \"react-router\";\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route  \n// } from \"react-router-dom\";\n\n\n\nfunction App() {\nconst [mode, setmode] = useState('light')\nconst [alert, setalert] = useState(null)\n\nconst showalert = (message,type)=>{\n setalert({\n   msg:message,\n   type:type\n })\n setTimeout(() => {\n   setalert(null);\n }, 2000);\n \n}\n\n\n\nconst togglebtn =()=>{\n  if(mode==='light'){\n    setmode('dark')\n    document.body.style.backgroundColor='grey'\n    showalert(\"Dark made has been enabled\",\"success\")\n  }else{\n    setmode('light')\n    document.body.style.backgroundColor='white'\n    showalert(\"Dark made has been disabled\",\"success\")\n  }\n}\n  return (\n    \n    <>\n  {/* <Router> */}\n  <Navbar title=\"Text editor\" abouttext=\"about Texteditor\" showalert={showalert} mode={mode} toggle={togglebtn}/>\n  <Alert alert={alert} />\n  <div className=\"container\">\n {/* <Switch> */}\n          {/* <Route exact path=\"/about\"> */}\n            {/* <About mode={mode}/> */}\n          {/* </Route> */}\n          \n          {/* <Route exact path=\"/\"> */}\n          <Forms heading=\"Enter your text below\" mode={mode} showalert={showalert}/>\n          {/* </Route> */}\n        {/* </Switch> */}\n</div>\n  {/* </Router> */}\n \n   </>\n  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}